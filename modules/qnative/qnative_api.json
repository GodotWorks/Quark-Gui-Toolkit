{
  "core": {
    "type": "CORE",
    "version": {
      "major": 1,
      "minor": 0
    },
    "next": null,
    "api": [
      {
        "name": "quark_color_new_rgba",
        "return_type": "void",
        "arguments": [
          ["quark_color *", "r_dest"],
          ["const quark_real", "p_r"],
          ["const quark_real", "p_g"],
          ["const quark_real", "p_b"],
          ["const quark_real", "p_a"]
        ]
      },
      {
        "name": "quark_color_new_rgb",
        "return_type": "void",
        "arguments": [
          ["quark_color *", "r_dest"],
          ["const quark_real", "p_r"],
          ["const quark_real", "p_g"],
          ["const quark_real", "p_b"]
        ]
      },
      {
        "name": "quark_color_get_r",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_color *", "p_self"]
        ]
      },
      {
        "name": "quark_color_set_r",
        "return_type": "void",
        "arguments": [
          ["quark_color *", "p_self"],
          ["const quark_real", "r"]
        ]
      },
      {
        "name": "quark_color_get_g",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_color *", "p_self"]
        ]
      },
      {
        "name": "quark_color_set_g",
        "return_type": "void",
        "arguments": [
          ["quark_color *", "p_self"],
          ["const quark_real", "g"]
        ]
      },
      {
        "name": "quark_color_get_b",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_color *", "p_self"]
        ]
      },
      {
        "name": "quark_color_set_b",
        "return_type": "void",
        "arguments": [
          ["quark_color *", "p_self"],
          ["const quark_real", "b"]
        ]
      },
      {
        "name": "quark_color_get_a",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_color *", "p_self"]
        ]
      },
      {
        "name": "quark_color_set_a",
        "return_type": "void",
        "arguments": [
          ["quark_color *", "p_self"],
          ["const quark_real", "a"]
        ]
      },
      {
        "name": "quark_color_get_h",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_color *", "p_self"]
        ]
      },
      {
        "name": "quark_color_get_s",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_color *", "p_self"]
        ]
      },
      {
        "name": "quark_color_get_v",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_color *", "p_self"]
        ]
      },
      {
        "name": "quark_color_as_string",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_color *", "p_self"]
        ]
      },
      {
        "name": "quark_color_to_rgba32",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_color *", "p_self"]
        ]
      },
      {
        "name": "quark_color_to_argb32",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_color *", "p_self"]
        ]
      },
      {
        "name": "quark_color_gray",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_color *", "p_self"]
        ]
      },
      {
        "name": "quark_color_inverted",
        "return_type": "quark_color",
        "arguments": [
          ["const quark_color *", "p_self"]
        ]
      },
      {
        "name": "quark_color_contrasted",
        "return_type": "quark_color",
        "arguments": [
          ["const quark_color *", "p_self"]
        ]
      },
      {
        "name": "quark_color_linear_interpolate",
        "return_type": "quark_color",
        "arguments": [
          ["const quark_color *", "p_self"],
          ["const quark_color *", "p_b"],
          ["const quark_real", "p_t"]
        ]
      },
      {
        "name": "quark_color_blend",
        "return_type": "quark_color",
        "arguments": [
          ["const quark_color *", "p_self"],
          ["const quark_color *", "p_over"]
        ]
      },
      {
        "name": "quark_color_to_html",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_color *", "p_self"],
          ["const quark_bool", "p_with_alpha"]
        ]
      },
      {
        "name": "quark_color_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_color *", "p_self"],
          ["const quark_color *", "p_b"]
        ]
      },
      {
        "name": "quark_color_operator_less",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_color *", "p_self"],
          ["const quark_color *", "p_b"]
        ]
      },
      {
        "name": "quark_vector2_new",
        "return_type": "void",
        "arguments": [
          ["quark_vector2 *", "r_dest"],
          ["const quark_real", "p_x"],
          ["const quark_real", "p_y"]
        ]
      },
      {
        "name": "quark_vector2_as_string",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_vector2 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector2_normalized",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector2_length",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector2 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector2_angle",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector2 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector2_length_squared",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector2 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector2_is_normalized",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_vector2 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector2_distance_to",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_to"]
        ]
      },
      {
        "name": "quark_vector2_distance_squared_to",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_to"]
        ]
      },
      {
        "name": "quark_vector2_angle_to",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_to"]
        ]
      },
      {
        "name": "quark_vector2_angle_to_point",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_to"]
        ]
      },
      {
        "name": "quark_vector2_linear_interpolate",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_b"],
          ["const quark_real", "p_t"]
        ]
      },
      {
        "name": "quark_vector2_cubic_interpolate",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_b"],
          ["const quark_vector2 *", "p_pre_a"],
          ["const quark_vector2 *", "p_post_b"],
          ["const quark_real", "p_t"]
        ]
      },
      {
        "name": "quark_vector2_rotated",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_real", "p_phi"]
        ]
      },
      {
        "name": "quark_vector2_tangent",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector2_floor",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector2_snapped",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_by"]
        ]
      },
      {
        "name": "quark_vector2_aspect",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector2 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector2_dot",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_with"]
        ]
      },
      {
        "name": "quark_vector2_slide",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_n"]
        ]
      },
      {
        "name": "quark_vector2_bounce",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_n"]
        ]
      },
      {
        "name": "quark_vector2_reflect",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_n"]
        ]
      },
      {
        "name": "quark_vector2_abs",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector2_clamped",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_real", "p_length"]
        ]
      },
      {
        "name": "quark_vector2_operator_add",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector2_operator_subtract",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector2_operator_multiply_vector",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector2_operator_multiply_scalar",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_real", "p_b"]
        ]
      },
      {
        "name": "quark_vector2_operator_divide_vector",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector2_operator_divide_scalar",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_real", "p_b"]
        ]
      },
      {
        "name": "quark_vector2_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector2_operator_less",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_vector2 *", "p_self"],
          ["const quark_vector2 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector2_operator_neg",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_vector2 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector2_set_x",
        "return_type": "void",
        "arguments": [
          ["quark_vector2 *", "p_self"],
          ["const quark_real", "p_x"]
        ]
      },
      {
        "name": "quark_vector2_set_y",
        "return_type": "void",
        "arguments": [
          ["quark_vector2 *", "p_self"],
          ["const quark_real", "p_y"]
        ]
      },
      {
        "name": "quark_vector2_get_x",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector2 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector2_get_y",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector2 *", "p_self"]
        ]
      },
      {
        "name": "quark_quat_new",
        "return_type": "void",
        "arguments": [
          ["quark_quat *", "r_dest"],
          ["const quark_real", "p_x"],
          ["const quark_real", "p_y"],
          ["const quark_real", "p_z"],
          ["const quark_real", "p_w"]
        ]
      },
      {
        "name": "quark_quat_new_with_axis_angle",
        "return_type": "void",
        "arguments": [
          ["quark_quat *", "r_dest"],
          ["const quark_vector3 *", "p_axis"],
          ["const quark_real", "p_angle"]
        ]
      },
      {
        "name": "quark_quat_get_x",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_quat *", "p_self"]
        ]
      },
      {
        "name": "quark_quat_set_x",
        "return_type": "void",
        "arguments": [
          ["quark_quat *", "p_self"],
          ["const quark_real", "val"]
        ]
      },
      {
        "name": "quark_quat_get_y",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_quat *", "p_self"]
        ]
      },
      {
        "name": "quark_quat_set_y",
        "return_type": "void",
        "arguments": [
          ["quark_quat *", "p_self"],
          ["const quark_real", "val"]
        ]
      },
      {
        "name": "quark_quat_get_z",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_quat *", "p_self"]
        ]
      },
      {
        "name": "quark_quat_set_z",
        "return_type": "void",
        "arguments": [
          ["quark_quat *", "p_self"],
          ["const quark_real", "val"]
        ]
      },
      {
        "name": "quark_quat_get_w",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_quat *", "p_self"]
        ]
      },
      {
        "name": "quark_quat_set_w",
        "return_type": "void",
        "arguments": [
          ["quark_quat *", "p_self"],
          ["const quark_real", "val"]
        ]
      },
      {
        "name": "quark_quat_as_string",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_quat *", "p_self"]
        ]
      },
      {
        "name": "quark_quat_length",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_quat *", "p_self"]
        ]
      },
      {
        "name": "quark_quat_length_squared",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_quat *", "p_self"]
        ]
      },
      {
        "name": "quark_quat_normalized",
        "return_type": "quark_quat",
        "arguments": [
          ["const quark_quat *", "p_self"]
        ]
      },
      {
        "name": "quark_quat_is_normalized",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_quat *", "p_self"]
        ]
      },
      {
        "name": "quark_quat_inverse",
        "return_type": "quark_quat",
        "arguments": [
          ["const quark_quat *", "p_self"]
        ]
      },
      {
        "name": "quark_quat_dot",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_quat *", "p_self"],
          ["const quark_quat *", "p_b"]
        ]
      },
      {
        "name": "quark_quat_xform",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_quat *", "p_self"],
          ["const quark_vector3 *", "p_v"]
        ]
      },
      {
        "name": "quark_quat_slerp",
        "return_type": "quark_quat",
        "arguments": [
          ["const quark_quat *", "p_self"],
          ["const quark_quat *", "p_b"],
          ["const quark_real", "p_t"]
        ]
      },
      {
        "name": "quark_quat_slerpni",
        "return_type": "quark_quat",
        "arguments": [
          ["const quark_quat *", "p_self"],
          ["const quark_quat *", "p_b"],
          ["const quark_real", "p_t"]
        ]
      },
      {
        "name": "quark_quat_cubic_slerp",
        "return_type": "quark_quat",
        "arguments": [
          ["const quark_quat *", "p_self"],
          ["const quark_quat *", "p_b"],
          ["const quark_quat *", "p_pre_a"],
          ["const quark_quat *", "p_post_b"],
          ["const quark_real", "p_t"]
        ]
      },
      {
        "name": "quark_quat_operator_multiply",
        "return_type": "quark_quat",
        "arguments": [
          ["const quark_quat *", "p_self"],
          ["const quark_real", "p_b"]
        ]
      },
      {
        "name": "quark_quat_operator_add",
        "return_type": "quark_quat",
        "arguments": [
          ["const quark_quat *", "p_self"],
          ["const quark_quat *", "p_b"]
        ]
      },
      {
        "name": "quark_quat_operator_subtract",
        "return_type": "quark_quat",
        "arguments": [
          ["const quark_quat *", "p_self"],
          ["const quark_quat *", "p_b"]
        ]
      },
      {
        "name": "quark_quat_operator_divide",
        "return_type": "quark_quat",
        "arguments": [
          ["const quark_quat *", "p_self"],
          ["const quark_real", "p_b"]
        ]
      },
      {
        "name": "quark_quat_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_quat *", "p_self"],
          ["const quark_quat *", "p_b"]
        ]
      },
      {
        "name": "quark_quat_operator_neg",
        "return_type": "quark_quat",
        "arguments": [
          ["const quark_quat *", "p_self"]
        ]
      },
      {
        "name": "quark_basis_new_with_rows",
        "return_type": "void",
        "arguments": [
          ["quark_basis *", "r_dest"],
          ["const quark_vector3 *", "p_x_axis"],
          ["const quark_vector3 *", "p_y_axis"],
          ["const quark_vector3 *", "p_z_axis"]
        ]
      },
      {
        "name": "quark_basis_new_with_axis_and_angle",
        "return_type": "void",
        "arguments": [
          ["quark_basis *", "r_dest"],
          ["const quark_vector3 *", "p_axis"],
          ["const quark_real", "p_phi"]
        ]
      },
      {
        "name": "quark_basis_new_with_euler",
        "return_type": "void",
        "arguments": [
          ["quark_basis *", "r_dest"],
          ["const quark_vector3 *", "p_euler"]
        ]
      },
      {
        "name": "quark_basis_as_string",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_basis *", "p_self"]
        ]
      },
      {
        "name": "quark_basis_inverse",
        "return_type": "quark_basis",
        "arguments": [
          ["const quark_basis *", "p_self"]
        ]
      },
      {
        "name": "quark_basis_transposed",
        "return_type": "quark_basis",
        "arguments": [
          ["const quark_basis *", "p_self"]
        ]
      },
      {
        "name": "quark_basis_orthonormalized",
        "return_type": "quark_basis",
        "arguments": [
          ["const quark_basis *", "p_self"]
        ]
      },
      {
        "name": "quark_basis_determinant",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_basis *", "p_self"]
        ]
      },
      {
        "name": "quark_basis_rotated",
        "return_type": "quark_basis",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_vector3 *", "p_axis"],
          ["const quark_real", "p_phi"]
        ]
      },
      {
        "name": "quark_basis_scaled",
        "return_type": "quark_basis",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_vector3 *", "p_scale"]
        ]
      },
      {
        "name": "quark_basis_get_scale",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_basis *", "p_self"]
        ]
      },
      {
        "name": "quark_basis_get_euler",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_basis *", "p_self"]
        ]
      },
      {
        "name": "quark_basis_tdotx",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_vector3 *", "p_with"]
        ]
      },
      {
        "name": "quark_basis_tdoty",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_vector3 *", "p_with"]
        ]
      },
      {
        "name": "quark_basis_tdotz",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_vector3 *", "p_with"]
        ]
      },
      {
        "name": "quark_basis_xform",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_vector3 *", "p_v"]
        ]
      },
      {
        "name": "quark_basis_xform_inv",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_vector3 *", "p_v"]
        ]
      },
      {
        "name": "quark_basis_get_orthogonal_index",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_basis *", "p_self"]
        ]
      },
      {
        "name": "quark_basis_new",
        "return_type": "void",
        "arguments": [
          ["quark_basis *", "r_dest"]
        ]
      },
      {
        "name": "quark_basis_new_with_euler_quat",
        "return_type": "void",
        "arguments": [
          ["quark_basis *", "r_dest"],
          ["const quark_quat *", "p_euler"]
        ]
      },
      {
        "name": "quark_basis_get_elements",
        "return_type": "void",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["quark_vector3 *", "p_elements"]
        ]
      },
      {
        "name": "quark_basis_get_axis",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_int", "p_axis"]
        ]
      },
      {
        "name": "quark_basis_set_axis",
        "return_type": "void",
        "arguments": [
          ["quark_basis *", "p_self"],
          ["const quark_int", "p_axis"],
          ["const quark_vector3 *", "p_value"]
        ]
      },
      {
        "name": "quark_basis_get_row",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_int", "p_row"]
        ]
      },
      {
        "name": "quark_basis_set_row",
        "return_type": "void",
        "arguments": [
          ["quark_basis *", "p_self"],
          ["const quark_int", "p_row"],
          ["const quark_vector3 *", "p_value"]
        ]
      },
      {
        "name": "quark_basis_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_basis *", "p_b"]
        ]
      },
      {
        "name": "quark_basis_operator_add",
        "return_type": "quark_basis",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_basis *", "p_b"]
        ]
      },
      {
        "name": "quark_basis_operator_subtract",
        "return_type": "quark_basis",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_basis *", "p_b"]
        ]
      },
      {
        "name": "quark_basis_operator_multiply_vector",
        "return_type": "quark_basis",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_basis *", "p_b"]
        ]
      },
      {
        "name": "quark_basis_operator_multiply_scalar",
        "return_type": "quark_basis",
        "arguments": [
          ["const quark_basis *", "p_self"],
          ["const quark_real", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_new",
        "return_type": "void",
        "arguments": [
          ["quark_vector3 *", "r_dest"],
          ["const quark_real", "p_x"],
          ["const quark_real", "p_y"],
          ["const quark_real", "p_z"]
        ]
      },
      {
        "name": "quark_vector3_as_string",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_vector3 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector3_min_axis",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_vector3 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector3_max_axis",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_vector3 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector3_length",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector3 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector3_length_squared",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector3 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector3_is_normalized",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_vector3 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector3_normalized",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector3_inverse",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector3_snapped",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_by"]
        ]
      },
      {
        "name": "quark_vector3_rotated",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_axis"],
          ["const quark_real", "p_phi"]
        ]
      },
      {
        "name": "quark_vector3_linear_interpolate",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_b"],
          ["const quark_real", "p_t"]
        ]
      },
      {
        "name": "quark_vector3_cubic_interpolate",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_b"],
          ["const quark_vector3 *", "p_pre_a"],
          ["const quark_vector3 *", "p_post_b"],
          ["const quark_real", "p_t"]
        ]
      },
      {
        "name": "quark_vector3_dot",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_cross",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_outer",
        "return_type": "quark_basis",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_to_diagonal_matrix",
        "return_type": "quark_basis",
        "arguments": [
          ["const quark_vector3 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector3_abs",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector3_floor",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector3_ceil",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector3_distance_to",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_distance_squared_to",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_angle_to",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_to"]
        ]
      },
      {
        "name": "quark_vector3_slide",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_n"]
        ]
      },
      {
        "name": "quark_vector3_bounce",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_n"]
        ]
      },
      {
        "name": "quark_vector3_reflect",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_n"]
        ]
      },
      {
        "name": "quark_vector3_operator_add",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_operator_subtract",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_operator_multiply_vector",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_operator_multiply_scalar",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_real", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_operator_divide_vector",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_operator_divide_scalar",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_real", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_operator_less",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3 *", "p_b"]
        ]
      },
      {
        "name": "quark_vector3_operator_neg",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_vector3 *", "p_self"]
        ]
      },
      {
        "name": "quark_vector3_set_axis",
        "return_type": "void",
        "arguments": [
          ["quark_vector3 *", "p_self"],
          ["const quark_vector3_axis", "p_axis"],
          ["const quark_real", "p_val"]
        ]
      },
      {
        "name": "quark_vector3_get_axis",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_vector3 *", "p_self"],
          ["const quark_vector3_axis", "p_axis"]
        ]
      },
      {
        "name": "quark_pool_byte_array_new",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array *", "r_dest"]
        ]
      },
      {
        "name": "quark_pool_byte_array_new_copy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array *", "r_dest"],
          ["const quark_pool_byte_array *", "p_src"]
        ]
      },
      {
        "name": "quark_pool_byte_array_new_with_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array *", "r_dest"],
          ["const quark_array *", "p_a"]
        ]
      },
      {
        "name": "quark_pool_byte_array_append",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array *", "p_self"],
          ["const uint8_t", "p_data"]
        ]
      },
      {
        "name": "quark_pool_byte_array_append_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array *", "p_self"],
          ["const quark_pool_byte_array *", "p_array"]
        ]
      },
      {
        "name": "quark_pool_byte_array_insert",
        "return_type": "quark_error",
        "arguments": [
          ["quark_pool_byte_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const uint8_t", "p_data"]
        ]
      },
      {
        "name": "quark_pool_byte_array_invert",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_byte_array_push_back",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array *", "p_self"],
          ["const uint8_t", "p_data"]
        ]
      },
      {
        "name": "quark_pool_byte_array_remove",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_byte_array_resize",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array *", "p_self"],
          ["const quark_int", "p_size"]
        ]
      },
      {
        "name": "quark_pool_byte_array_read",
        "return_type": "quark_pool_byte_array_read_access *",
        "arguments": [
          ["const quark_pool_byte_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_byte_array_write",
        "return_type": "quark_pool_byte_array_write_access *",
        "arguments": [
          ["quark_pool_byte_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_byte_array_set",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const uint8_t", "p_data"]
        ]
      },
      {
        "name": "quark_pool_byte_array_get",
        "return_type": "uint8_t",
        "arguments": [
          ["const quark_pool_byte_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_byte_array_size",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_pool_byte_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_byte_array_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_int_array_new",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array *", "r_dest"]
        ]
      },
      {
        "name": "quark_pool_int_array_new_copy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array *", "r_dest"],
          ["const quark_pool_int_array *", "p_src"]
        ]
      },
      {
        "name": "quark_pool_int_array_new_with_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array *", "r_dest"],
          ["const quark_array *", "p_a"]
        ]
      },
      {
        "name": "quark_pool_int_array_append",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array *", "p_self"],
          ["const quark_int", "p_data"]
        ]
      },
      {
        "name": "quark_pool_int_array_append_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array *", "p_self"],
          ["const quark_pool_int_array *", "p_array"]
        ]
      },
      {
        "name": "quark_pool_int_array_insert",
        "return_type": "quark_error",
        "arguments": [
          ["quark_pool_int_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const quark_int", "p_data"]
        ]
      },
      {
        "name": "quark_pool_int_array_invert",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_int_array_push_back",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array *", "p_self"],
          ["const quark_int", "p_data"]
        ]
      },
      {
        "name": "quark_pool_int_array_remove",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_int_array_resize",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array *", "p_self"],
          ["const quark_int", "p_size"]
        ]
      },
      {
        "name": "quark_pool_int_array_read",
        "return_type": "quark_pool_int_array_read_access *",
        "arguments": [
          ["const quark_pool_int_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_int_array_write",
        "return_type": "quark_pool_int_array_write_access *",
        "arguments": [
          ["quark_pool_int_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_int_array_set",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const quark_int", "p_data"]
        ]
      },
      {
        "name": "quark_pool_int_array_get",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_pool_int_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_int_array_size",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_pool_int_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_int_array_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_real_array_new",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array *", "r_dest"]
        ]
      },
      {
        "name": "quark_pool_real_array_new_copy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array *", "r_dest"],
          ["const quark_pool_real_array *", "p_src"]
        ]
      },
      {
        "name": "quark_pool_real_array_new_with_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array *", "r_dest"],
          ["const quark_array *", "p_a"]
        ]
      },
      {
        "name": "quark_pool_real_array_append",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array *", "p_self"],
          ["const quark_real", "p_data"]
        ]
      },
      {
        "name": "quark_pool_real_array_append_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array *", "p_self"],
          ["const quark_pool_real_array *", "p_array"]
        ]
      },
      {
        "name": "quark_pool_real_array_insert",
        "return_type": "quark_error",
        "arguments": [
          ["quark_pool_real_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const quark_real", "p_data"]
        ]
      },
      {
        "name": "quark_pool_real_array_invert",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_real_array_push_back",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array *", "p_self"],
          ["const quark_real", "p_data"]
        ]
      },
      {
        "name": "quark_pool_real_array_remove",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_real_array_resize",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array *", "p_self"],
          ["const quark_int", "p_size"]
        ]
      },
      {
        "name": "quark_pool_real_array_read",
        "return_type": "quark_pool_real_array_read_access *",
        "arguments": [
          ["const quark_pool_real_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_real_array_write",
        "return_type": "quark_pool_real_array_write_access *",
        "arguments": [
          ["quark_pool_real_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_real_array_set",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const quark_real", "p_data"]
        ]
      },
      {
        "name": "quark_pool_real_array_get",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_pool_real_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_real_array_size",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_pool_real_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_real_array_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_string_array_new",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array *", "r_dest"]
        ]
      },
      {
        "name": "quark_pool_string_array_new_copy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array *", "r_dest"],
          ["const quark_pool_string_array *", "p_src"]
        ]
      },
      {
        "name": "quark_pool_string_array_new_with_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array *", "r_dest"],
          ["const quark_array *", "p_a"]
        ]
      },
      {
        "name": "quark_pool_string_array_append",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array *", "p_self"],
          ["const quark_string *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_string_array_append_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array *", "p_self"],
          ["const quark_pool_string_array *", "p_array"]
        ]
      },
      {
        "name": "quark_pool_string_array_insert",
        "return_type": "quark_error",
        "arguments": [
          ["quark_pool_string_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const quark_string *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_string_array_invert",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_string_array_push_back",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array *", "p_self"],
          ["const quark_string *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_string_array_remove",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_string_array_resize",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array *", "p_self"],
          ["const quark_int", "p_size"]
        ]
      },
      {
        "name": "quark_pool_string_array_read",
        "return_type": "quark_pool_string_array_read_access *",
        "arguments": [
          ["const quark_pool_string_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_string_array_write",
        "return_type": "quark_pool_string_array_write_access *",
        "arguments": [
          ["quark_pool_string_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_string_array_set",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const quark_string *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_string_array_get",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_pool_string_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_string_array_size",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_pool_string_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_string_array_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_new",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array *", "r_dest"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_new_copy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array *", "r_dest"],
          ["const quark_pool_vector2_array *", "p_src"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_new_with_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array *", "r_dest"],
          ["const quark_array *", "p_a"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_append",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array *", "p_self"],
          ["const quark_vector2 *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_append_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array *", "p_self"],
          ["const quark_pool_vector2_array *", "p_array"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_insert",
        "return_type": "quark_error",
        "arguments": [
          ["quark_pool_vector2_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const quark_vector2 *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_invert",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_push_back",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array *", "p_self"],
          ["const quark_vector2 *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_remove",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_resize",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array *", "p_self"],
          ["const quark_int", "p_size"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_read",
        "return_type": "quark_pool_vector2_array_read_access *",
        "arguments": [
          ["const quark_pool_vector2_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_write",
        "return_type": "quark_pool_vector2_array_write_access *",
        "arguments": [
          ["quark_pool_vector2_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_set",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const quark_vector2 *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_get",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_pool_vector2_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_size",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_pool_vector2_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_new",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array *", "r_dest"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_new_copy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array *", "r_dest"],
          ["const quark_pool_vector3_array *", "p_src"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_new_with_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array *", "r_dest"],
          ["const quark_array *", "p_a"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_append",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array *", "p_self"],
          ["const quark_vector3 *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_append_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array *", "p_self"],
          ["const quark_pool_vector3_array *", "p_array"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_insert",
        "return_type": "quark_error",
        "arguments": [
          ["quark_pool_vector3_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const quark_vector3 *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_invert",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_push_back",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array *", "p_self"],
          ["const quark_vector3 *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_remove",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_resize",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array *", "p_self"],
          ["const quark_int", "p_size"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_read",
        "return_type": "quark_pool_vector3_array_read_access *",
        "arguments": [
          ["const quark_pool_vector3_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_write",
        "return_type": "quark_pool_vector3_array_write_access *",
        "arguments": [
          ["quark_pool_vector3_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_set",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const quark_vector3 *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_get",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_pool_vector3_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_size",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_pool_vector3_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_color_array_new",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array *", "r_dest"]
        ]
      },
      {
        "name": "quark_pool_color_array_new_copy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array *", "r_dest"],
          ["const quark_pool_color_array *", "p_src"]
        ]
      },
      {
        "name": "quark_pool_color_array_new_with_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array *", "r_dest"],
          ["const quark_array *", "p_a"]
        ]
      },
      {
        "name": "quark_pool_color_array_append",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array *", "p_self"],
          ["const quark_color *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_color_array_append_array",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array *", "p_self"],
          ["const quark_pool_color_array *", "p_array"]
        ]
      },
      {
        "name": "quark_pool_color_array_insert",
        "return_type": "quark_error",
        "arguments": [
          ["quark_pool_color_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const quark_color *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_color_array_invert",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_color_array_push_back",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array *", "p_self"],
          ["const quark_color *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_color_array_remove",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_color_array_resize",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array *", "p_self"],
          ["const quark_int", "p_size"]
        ]
      },
      {
        "name": "quark_pool_color_array_read",
        "return_type": "quark_pool_color_array_read_access *",
        "arguments": [
          ["const quark_pool_color_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_color_array_write",
        "return_type": "quark_pool_color_array_write_access *",
        "arguments": [
          ["quark_pool_color_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_color_array_set",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const quark_color *", "p_data"]
        ]
      },
      {
        "name": "quark_pool_color_array_get",
        "return_type": "quark_color",
        "arguments": [
          ["const quark_pool_color_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_pool_color_array_size",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_pool_color_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_color_array_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array *", "p_self"]
        ]
      },
      {
        "name": "quark_pool_byte_array_read_access_copy",
        "return_type": "quark_pool_byte_array_read_access *",
        "arguments": [
          ["const quark_pool_byte_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_byte_array_read_access_ptr",
        "return_type": "const uint8_t *",
        "arguments": [
          ["const quark_pool_byte_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_byte_array_read_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array_read_access *", "p_read"],
          ["quark_pool_byte_array_read_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_byte_array_read_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_int_array_read_access_copy",
        "return_type": "quark_pool_int_array_read_access *",
        "arguments": [
          ["const quark_pool_int_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_int_array_read_access_ptr",
        "return_type": "const quark_int *",
        "arguments": [
          ["const quark_pool_int_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_int_array_read_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array_read_access *", "p_read"],
          ["quark_pool_int_array_read_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_int_array_read_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_real_array_read_access_copy",
        "return_type": "quark_pool_real_array_read_access *",
        "arguments": [
          ["const quark_pool_real_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_real_array_read_access_ptr",
        "return_type": "const quark_real *",
        "arguments": [
          ["const quark_pool_real_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_real_array_read_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array_read_access *", "p_read"],
          ["quark_pool_real_array_read_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_real_array_read_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_string_array_read_access_copy",
        "return_type": "quark_pool_string_array_read_access *",
        "arguments": [
          ["const quark_pool_string_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_string_array_read_access_ptr",
        "return_type": "const quark_string *",
        "arguments": [
          ["const quark_pool_string_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_string_array_read_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array_read_access *", "p_read"],
          ["quark_pool_string_array_read_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_string_array_read_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_read_access_copy",
        "return_type": "quark_pool_vector2_array_read_access *",
        "arguments": [
          ["const quark_pool_vector2_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_read_access_ptr",
        "return_type": "const quark_vector2 *",
        "arguments": [
          ["const quark_pool_vector2_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_read_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array_read_access *", "p_read"],
          ["quark_pool_vector2_array_read_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_read_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_read_access_copy",
        "return_type": "quark_pool_vector3_array_read_access *",
        "arguments": [
          ["const quark_pool_vector3_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_read_access_ptr",
        "return_type": "const quark_vector3 *",
        "arguments": [
          ["const quark_pool_vector3_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_read_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array_read_access *", "p_read"],
          ["quark_pool_vector3_array_read_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_read_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_color_array_read_access_copy",
        "return_type": "quark_pool_color_array_read_access *",
        "arguments": [
          ["const quark_pool_color_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_color_array_read_access_ptr",
        "return_type": "const quark_color *",
        "arguments": [
          ["const quark_pool_color_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_color_array_read_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array_read_access *", "p_read"],
          ["quark_pool_color_array_read_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_color_array_read_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array_read_access *", "p_read"]
        ]
      },
      {
        "name": "quark_pool_byte_array_write_access_copy",
        "return_type": "quark_pool_byte_array_write_access *",
        "arguments": [
          ["const quark_pool_byte_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_byte_array_write_access_ptr",
        "return_type": "uint8_t *",
        "arguments": [
          ["const quark_pool_byte_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_byte_array_write_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array_write_access *", "p_write"],
          ["quark_pool_byte_array_write_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_byte_array_write_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_byte_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_int_array_write_access_copy",
        "return_type": "quark_pool_int_array_write_access *",
        "arguments": [
          ["const quark_pool_int_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_int_array_write_access_ptr",
        "return_type": "quark_int *",
        "arguments": [
          ["const quark_pool_int_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_int_array_write_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array_write_access *", "p_write"],
          ["quark_pool_int_array_write_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_int_array_write_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_int_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_real_array_write_access_copy",
        "return_type": "quark_pool_real_array_write_access *",
        "arguments": [
          ["const quark_pool_real_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_real_array_write_access_ptr",
        "return_type": "quark_real *",
        "arguments": [
          ["const quark_pool_real_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_real_array_write_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array_write_access *", "p_write"],
          ["quark_pool_real_array_write_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_real_array_write_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_real_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_string_array_write_access_copy",
        "return_type": "quark_pool_string_array_write_access *",
        "arguments": [
          ["const quark_pool_string_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_string_array_write_access_ptr",
        "return_type": "quark_string *",
        "arguments": [
          ["const quark_pool_string_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_string_array_write_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array_write_access *", "p_write"],
          ["quark_pool_string_array_write_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_string_array_write_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_string_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_write_access_copy",
        "return_type": "quark_pool_vector2_array_write_access *",
        "arguments": [
          ["const quark_pool_vector2_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_write_access_ptr",
        "return_type": "quark_vector2 *",
        "arguments": [
          ["const quark_pool_vector2_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_write_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array_write_access *", "p_write"],
          ["quark_pool_vector2_array_write_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_vector2_array_write_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector2_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_write_access_copy",
        "return_type": "quark_pool_vector3_array_write_access *",
        "arguments": [
          ["const quark_pool_vector3_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_write_access_ptr",
        "return_type": "quark_vector3 *",
        "arguments": [
          ["const quark_pool_vector3_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_write_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array_write_access *", "p_write"],
          ["quark_pool_vector3_array_write_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_vector3_array_write_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_vector3_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_color_array_write_access_copy",
        "return_type": "quark_pool_color_array_write_access *",
        "arguments": [
          ["const quark_pool_color_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_color_array_write_access_ptr",
        "return_type": "quark_color *",
        "arguments": [
          ["const quark_pool_color_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_pool_color_array_write_access_operator_assign",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array_write_access *", "p_write"],
          ["quark_pool_color_array_write_access *", "p_other"]
        ]
      },
      {
        "name": "quark_pool_color_array_write_access_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_pool_color_array_write_access *", "p_write"]
        ]
      },
      {
        "name": "quark_array_new",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "r_dest"]
        ]
      },
      {
        "name": "quark_array_new_copy",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "r_dest"],
          ["const quark_array *", "p_src"]
        ]
      },
      {
        "name": "quark_array_new_pool_color_array",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "r_dest"],
          ["const quark_pool_color_array *", "p_pca"]
        ]
      },
      {
        "name": "quark_array_new_pool_vector3_array",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "r_dest"],
          ["const quark_pool_vector3_array *", "p_pv3a"]
        ]
      },
      {
        "name": "quark_array_new_pool_vector2_array",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "r_dest"],
          ["const quark_pool_vector2_array *", "p_pv2a"]
        ]
      },
      {
        "name": "quark_array_new_pool_string_array",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "r_dest"],
          ["const quark_pool_string_array *", "p_psa"]
        ]
      },
      {
        "name": "quark_array_new_pool_real_array",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "r_dest"],
          ["const quark_pool_real_array *", "p_pra"]
        ]
      },
      {
        "name": "quark_array_new_pool_int_array",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "r_dest"],
          ["const quark_pool_int_array *", "p_pia"]
        ]
      },
      {
        "name": "quark_array_new_pool_byte_array",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "r_dest"],
          ["const quark_pool_byte_array *", "p_pba"]
        ]
      },
      {
        "name": "quark_array_set",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "p_self"],
          ["const quark_int", "p_idx"],
          ["const quark_variant *", "p_value"]
        ]
      },
      {
        "name": "quark_array_get",
        "return_type": "quark_variant",
        "arguments": [
          ["const quark_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_array_operator_index",
        "return_type": "quark_variant *",
        "arguments": [
          ["quark_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_array_operator_index_const",
        "return_type": "const quark_variant *",
        "arguments": [
          ["const quark_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_array_append",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "p_self"],
          ["const quark_variant *", "p_value"]
        ]
      },
      {
        "name": "quark_array_clear",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "p_self"]
        ]
      },
      {
        "name": "quark_array_count",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_array *", "p_self"],
          ["const quark_variant *", "p_value"]
        ]
      },
      {
        "name": "quark_array_empty",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_array *", "p_self"]
        ]
      },
      {
        "name": "quark_array_erase",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "p_self"],
          ["const quark_variant *", "p_value"]
        ]
      },
      {
        "name": "quark_array_front",
        "return_type": "quark_variant",
        "arguments": [
          ["const quark_array *", "p_self"]
        ]
      },
      {
        "name": "quark_array_back",
        "return_type": "quark_variant",
        "arguments": [
          ["const quark_array *", "p_self"]
        ]
      },
      {
        "name": "quark_array_find",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_array *", "p_self"],
          ["const quark_variant *", "p_what"],
          ["const quark_int", "p_from"]
        ]
      },
      {
        "name": "quark_array_find_last",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_array *", "p_self"],
          ["const quark_variant *", "p_what"]
        ]
      },
      {
        "name": "quark_array_has",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_array *", "p_self"],
          ["const quark_variant *", "p_value"]
        ]
      },
      {
        "name": "quark_array_hash",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_array *", "p_self"]
        ]
      },
      {
        "name": "quark_array_insert",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "p_self"],
          ["const quark_int", "p_pos"],
          ["const quark_variant *", "p_value"]
        ]
      },
      {
        "name": "quark_array_invert",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "p_self"]
        ]
      },
      {
        "name": "quark_array_pop_back",
        "return_type": "quark_variant",
        "arguments": [
          ["quark_array *", "p_self"]
        ]
      },
      {
        "name": "quark_array_pop_front",
        "return_type": "quark_variant",
        "arguments": [
          ["quark_array *", "p_self"]
        ]
      },
      {
        "name": "quark_array_push_back",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "p_self"],
          ["const quark_variant *", "p_value"]
        ]
      },
      {
        "name": "quark_array_push_front",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "p_self"],
          ["const quark_variant *", "p_value"]
        ]
      },
      {
        "name": "quark_array_remove",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_array_resize",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "p_self"],
          ["const quark_int", "p_size"]
        ]
      },
      {
        "name": "quark_array_rfind",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_array *", "p_self"],
          ["const quark_variant *", "p_what"],
          ["const quark_int", "p_from"]
        ]
      },
      {
        "name": "quark_array_size",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_array *", "p_self"]
        ]
      },
      {
        "name": "quark_array_sort",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "p_self"]
        ]
      },
      {
        "name": "quark_array_sort_custom",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "p_self"],
          ["quark_object *", "p_obj"],
          ["const quark_string *", "p_func"]
        ]
      },
      {
        "name": "quark_array_bsearch",
        "return_type": "quark_int",
        "arguments": [
          ["quark_array *", "p_self"],
          ["const quark_variant *", "p_value"],
          ["const quark_bool", "p_before"]
        ]
      },
      {
        "name": "quark_array_bsearch_custom",
        "return_type": "quark_int",
        "arguments": [
          ["quark_array *", "p_self"],
          ["const quark_variant *", "p_value"],
          ["quark_object *", "p_obj"],
          ["const quark_string *", "p_func"],
          ["const quark_bool", "p_before"]
        ]
      },
      {
        "name": "quark_array_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_array *", "p_self"]
        ]
      },
      {
        "name": "quark_dictionary_new",
        "return_type": "void",
        "arguments": [
          ["quark_dictionary *", "r_dest"]
        ]
      },
      {
        "name": "quark_dictionary_new_copy",
        "return_type": "void",
        "arguments": [
          ["quark_dictionary *", "r_dest"],
          ["const quark_dictionary *", "p_src"]
        ]
      },
      {
        "name": "quark_dictionary_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_dictionary *", "p_self"]
        ]
      },
      {
        "name": "quark_dictionary_size",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_dictionary *", "p_self"]
        ]
      },
      {
        "name": "quark_dictionary_empty",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_dictionary *", "p_self"]
        ]
      },
      {
        "name": "quark_dictionary_clear",
        "return_type": "void",
        "arguments": [
          ["quark_dictionary *", "p_self"]
        ]
      },
      {
        "name": "quark_dictionary_has",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_dictionary *", "p_self"],
          ["const quark_variant *", "p_key"]
        ]
      },
      {
        "name": "quark_dictionary_has_all",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_dictionary *", "p_self"],
          ["const quark_array *", "p_keys"]
        ]
      },
      {
        "name": "quark_dictionary_erase",
        "return_type": "void",
        "arguments": [
          ["quark_dictionary *", "p_self"],
          ["const quark_variant *", "p_key"]
        ]
      },
      {
        "name": "quark_dictionary_hash",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_dictionary *", "p_self"]
        ]
      },
      {
        "name": "quark_dictionary_keys",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_dictionary *", "p_self"]
        ]
      },
      {
        "name": "quark_dictionary_values",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_dictionary *", "p_self"]
        ]
      },
      {
        "name": "quark_dictionary_get",
        "return_type": "quark_variant",
        "arguments": [
          ["const quark_dictionary *", "p_self"],
          ["const quark_variant *", "p_key"]
        ]
      },
      {
        "name": "quark_dictionary_set",
        "return_type": "void",
        "arguments": [
          ["quark_dictionary *", "p_self"],
          ["const quark_variant *", "p_key"],
          ["const quark_variant *", "p_value"]
        ]
      },
      {
        "name": "quark_dictionary_operator_index",
        "return_type": "quark_variant *",
        "arguments": [
          ["quark_dictionary *", "p_self"],
          ["const quark_variant *", "p_key"]
        ]
      },
      {
        "name": "quark_dictionary_operator_index_const",
        "return_type": "const quark_variant *",
        "arguments": [
          ["const quark_dictionary *", "p_self"],
          ["const quark_variant *", "p_key"]
        ]
      },
      {
        "name": "quark_dictionary_next",
        "return_type": "quark_variant *",
        "arguments": [
          ["const quark_dictionary *", "p_self"],
          ["const quark_variant *", "p_key"]
        ]
      },
      {
        "name": "quark_dictionary_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_dictionary *", "p_self"],
          ["const quark_dictionary *", "p_b"]
        ]
      },
      {
        "name": "quark_dictionary_to_json",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_dictionary *", "p_self"]
        ]
      },
      {
        "name": "quark_node_path_new",
        "return_type": "void",
        "arguments": [
          ["quark_node_path *", "r_dest"],
          ["const quark_string *", "p_from"]
        ]
      },
      {
        "name": "quark_node_path_new_copy",
        "return_type": "void",
        "arguments": [
          ["quark_node_path *", "r_dest"],
          ["const quark_node_path *", "p_src"]
        ]
      },
      {
        "name": "quark_node_path_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_node_path *", "p_self"]
        ]
      },
      {
        "name": "quark_node_path_as_string",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_node_path *", "p_self"]
        ]
      },
      {
        "name": "quark_node_path_is_absolute",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_node_path *", "p_self"]
        ]
      },
      {
        "name": "quark_node_path_get_name_count",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_node_path *", "p_self"]
        ]
      },
      {
        "name": "quark_node_path_get_name",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_node_path *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_node_path_get_subname_count",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_node_path *", "p_self"]
        ]
      },
      {
        "name": "quark_node_path_get_subname",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_node_path *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_node_path_get_concatenated_subnames",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_node_path *", "p_self"]
        ]
      },
      {
        "name": "quark_node_path_is_empty",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_node_path *", "p_self"]
        ]
      },
      {
        "name": "quark_node_path_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_node_path *", "p_self"],
          ["const quark_node_path *", "p_b"]
        ]
      },
      {
        "name": "quark_plane_new_with_reals",
        "return_type": "void",
        "arguments": [
          ["quark_plane *", "r_dest"],
          ["const quark_real", "p_a"],
          ["const quark_real", "p_b"],
          ["const quark_real", "p_c"],
          ["const quark_real", "p_d"]
        ]
      },
      {
        "name": "quark_plane_new_with_vectors",
        "return_type": "void",
        "arguments": [
          ["quark_plane *", "r_dest"],
          ["const quark_vector3 *", "p_v1"],
          ["const quark_vector3 *", "p_v2"],
          ["const quark_vector3 *", "p_v3"]
        ]
      },
      {
        "name": "quark_plane_new_with_normal",
        "return_type": "void",
        "arguments": [
          ["quark_plane *", "r_dest"],
          ["const quark_vector3 *", "p_normal"],
          ["const quark_real", "p_d"]
        ]
      },
      {
        "name": "quark_plane_as_string",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_plane *", "p_self"]
        ]
      },
      {
        "name": "quark_plane_normalized",
        "return_type": "quark_plane",
        "arguments": [
          ["const quark_plane *", "p_self"]
        ]
      },
      {
        "name": "quark_plane_center",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_plane *", "p_self"]
        ]
      },
      {
        "name": "quark_plane_get_any_point",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_plane *", "p_self"]
        ]
      },
      {
        "name": "quark_plane_is_point_over",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_plane *", "p_self"],
          ["const quark_vector3 *", "p_point"]
        ]
      },
      {
        "name": "quark_plane_distance_to",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_plane *", "p_self"],
          ["const quark_vector3 *", "p_point"]
        ]
      },
      {
        "name": "quark_plane_has_point",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_plane *", "p_self"],
          ["const quark_vector3 *", "p_point"],
          ["const quark_real", "p_epsilon"]
        ]
      },
      {
        "name": "quark_plane_project",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_plane *", "p_self"],
          ["const quark_vector3 *", "p_point"]
        ]
      },
      {
        "name": "quark_plane_intersect_3",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_plane *", "p_self"],
          ["quark_vector3 *", "r_dest"],
          ["const quark_plane *", "p_b"],
          ["const quark_plane *", "p_c"]
        ]
      },
      {
        "name": "quark_plane_intersects_ray",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_plane *", "p_self"],
          ["quark_vector3 *", "r_dest"],
          ["const quark_vector3 *", "p_from"],
          ["const quark_vector3 *", "p_dir"]
        ]
      },
      {
        "name": "quark_plane_intersects_segment",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_plane *", "p_self"],
          ["quark_vector3 *", "r_dest"],
          ["const quark_vector3 *", "p_begin"],
          ["const quark_vector3 *", "p_end"]
        ]
      },
      {
        "name": "quark_plane_operator_neg",
        "return_type": "quark_plane",
        "arguments": [
          ["const quark_plane *", "p_self"]
        ]
      },
      {
        "name": "quark_plane_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_plane *", "p_self"],
          ["const quark_plane *", "p_b"]
        ]
      },
      {
        "name": "quark_plane_set_normal",
        "return_type": "void",
        "arguments": [
          ["quark_plane *", "p_self"],
          ["const quark_vector3 *", "p_normal"]
        ]
      },
      {
        "name": "quark_plane_get_normal",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_plane *", "p_self"]
        ]
      },
      {
        "name": "quark_plane_get_d",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_plane *", "p_self"]
        ]
      },
      {
        "name": "quark_plane_set_d",
        "return_type": "void",
        "arguments": [
          ["quark_plane *", "p_self"],
          ["const quark_real", "p_d"]
        ]
      },
      {
        "name": "quark_rect2_new_with_position_and_size",
        "return_type": "void",
        "arguments": [
          ["quark_rect2 *", "r_dest"],
          ["const quark_vector2 *", "p_pos"],
          ["const quark_vector2 *", "p_size"]
        ]
      },
      {
        "name": "quark_rect2_new",
        "return_type": "void",
        "arguments": [
          ["quark_rect2 *", "r_dest"],
          ["const quark_real", "p_x"],
          ["const quark_real", "p_y"],
          ["const quark_real", "p_width"],
          ["const quark_real", "p_height"]
        ]
      },
      {
        "name": "quark_rect2_as_string",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_rect2 *", "p_self"]
        ]
      },
      {
        "name": "quark_rect2_get_area",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_rect2 *", "p_self"]
        ]
      },
      {
        "name": "quark_rect2_intersects",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_rect2 *", "p_self"],
          ["const quark_rect2 *", "p_b"]
        ]
      },
      {
        "name": "quark_rect2_encloses",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_rect2 *", "p_self"],
          ["const quark_rect2 *", "p_b"]
        ]
      },
      {
        "name": "quark_rect2_has_no_area",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_rect2 *", "p_self"]
        ]
      },
      {
        "name": "quark_rect2_clip",
        "return_type": "quark_rect2",
        "arguments": [
          ["const quark_rect2 *", "p_self"],
          ["const quark_rect2 *", "p_b"]
        ]
      },
      {
        "name": "quark_rect2_merge",
        "return_type": "quark_rect2",
        "arguments": [
          ["const quark_rect2 *", "p_self"],
          ["const quark_rect2 *", "p_b"]
        ]
      },
      {
        "name": "quark_rect2_has_point",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_rect2 *", "p_self"],
          ["const quark_vector2 *", "p_point"]
        ]
      },
      {
        "name": "quark_rect2_grow",
        "return_type": "quark_rect2",
        "arguments": [
          ["const quark_rect2 *", "p_self"],
          ["const quark_real", "p_by"]
        ]
      },
      {
        "name": "quark_rect2_expand",
        "return_type": "quark_rect2",
        "arguments": [
          ["const quark_rect2 *", "p_self"],
          ["const quark_vector2 *", "p_to"]
        ]
      },
      {
        "name": "quark_rect2_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_rect2 *", "p_self"],
          ["const quark_rect2 *", "p_b"]
        ]
      },
      {
        "name": "quark_rect2_get_position",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_rect2 *", "p_self"]
        ]
      },
      {
        "name": "quark_rect2_get_size",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_rect2 *", "p_self"]
        ]
      },
      {
        "name": "quark_rect2_set_position",
        "return_type": "void",
        "arguments": [
          ["quark_rect2 *", "p_self"],
          ["const quark_vector2 *", "p_pos"]
        ]
      },
      {
        "name": "quark_rect2_set_size",
        "return_type": "void",
        "arguments": [
          ["quark_rect2 *", "p_self"],
          ["const quark_vector2 *", "p_size"]
        ]
      },
      {
        "name": "quark_aabb_new",
        "return_type": "void",
        "arguments": [
          ["quark_aabb *", "r_dest"],
          ["const quark_vector3 *", "p_pos"],
          ["const quark_vector3 *", "p_size"]
        ]
      },
      {
        "name": "quark_aabb_get_position",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_aabb *", "p_self"]
        ]
      },
      {
        "name": "quark_aabb_set_position",
        "return_type": "void",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_vector3 *", "p_v"]
        ]
      },
      {
        "name": "quark_aabb_get_size",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_aabb *", "p_self"]
        ]
      },
      {
        "name": "quark_aabb_set_size",
        "return_type": "void",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_vector3 *", "p_v"]
        ]
      },
      {
        "name": "quark_aabb_as_string",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_aabb *", "p_self"]
        ]
      },
      {
        "name": "quark_aabb_get_area",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_aabb *", "p_self"]
        ]
      },
      {
        "name": "quark_aabb_has_no_area",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_aabb *", "p_self"]
        ]
      },
      {
        "name": "quark_aabb_has_no_surface",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_aabb *", "p_self"]
        ]
      },
      {
        "name": "quark_aabb_intersects",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_aabb *", "p_with"]
        ]
      },
      {
        "name": "quark_aabb_encloses",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_aabb *", "p_with"]
        ]
      },
      {
        "name": "quark_aabb_merge",
        "return_type": "quark_aabb",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_aabb *", "p_with"]
        ]
      },
      {
        "name": "quark_aabb_intersection",
        "return_type": "quark_aabb",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_aabb *", "p_with"]
        ]
      },
      {
        "name": "quark_aabb_intersects_plane",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_plane *", "p_plane"]
        ]
      },
      {
        "name": "quark_aabb_intersects_segment",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_vector3 *", "p_from"],
          ["const quark_vector3 *", "p_to"]
        ]
      },
      {
        "name": "quark_aabb_has_point",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_vector3 *", "p_point"]
        ]
      },
      {
        "name": "quark_aabb_get_support",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_vector3 *", "p_dir"]
        ]
      },
      {
        "name": "quark_aabb_get_longest_axis",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_aabb *", "p_self"]
        ]
      },
      {
        "name": "quark_aabb_get_longest_axis_index",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_aabb *", "p_self"]
        ]
      },
      {
        "name": "quark_aabb_get_longest_axis_size",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_aabb *", "p_self"]
        ]
      },
      {
        "name": "quark_aabb_get_shortest_axis",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_aabb *", "p_self"]
        ]
      },
      {
        "name": "quark_aabb_get_shortest_axis_index",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_aabb *", "p_self"]
        ]
      },
      {
        "name": "quark_aabb_get_shortest_axis_size",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_aabb *", "p_self"]
        ]
      },
      {
        "name": "quark_aabb_expand",
        "return_type": "quark_aabb",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_vector3 *", "p_to_point"]
        ]
      },
      {
        "name": "quark_aabb_grow",
        "return_type": "quark_aabb",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_real", "p_by"]
        ]
      },
      {
        "name": "quark_aabb_get_endpoint",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_aabb_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_aabb *", "p_self"],
          ["const quark_aabb *", "p_b"]
        ]
      },
      {
        "name": "quark_rid_new",
        "return_type": "void",
        "arguments": [
          ["quark_rid *", "r_dest"]
        ]
      },
      {
        "name": "quark_rid_get_id",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_rid *", "p_self"]
        ]
      },
      {
        "name": "quark_rid_new_with_resource",
        "return_type": "void",
        "arguments": [
          ["quark_rid *", "r_dest"],
          ["const quark_object *", "p_from"]
        ]
      },
      {
        "name": "quark_rid_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_rid *", "p_self"],
          ["const quark_rid *", "p_b"]
        ]
      },
      {
        "name": "quark_rid_operator_less",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_rid *", "p_self"],
          ["const quark_rid *", "p_b"]
        ]
      },
      {
        "name": "quark_transform_new_with_axis_origin",
        "return_type": "void",
        "arguments": [
          ["quark_transform *", "r_dest"],
          ["const quark_vector3 *", "p_x_axis"],
          ["const quark_vector3 *", "p_y_axis"],
          ["const quark_vector3 *", "p_z_axis"],
          ["const quark_vector3 *", "p_origin"]
        ]
      },
      {
        "name": "quark_transform_new",
        "return_type": "void",
        "arguments": [
          ["quark_transform *", "r_dest"],
          ["const quark_basis *", "p_basis"],
          ["const quark_vector3 *", "p_origin"]
        ]
      },
      {
        "name": "quark_transform_get_basis",
        "return_type": "quark_basis",
        "arguments": [
          ["const quark_transform *", "p_self"]
        ]
      },
      {
        "name": "quark_transform_set_basis",
        "return_type": "void",
        "arguments": [
          ["quark_transform *", "p_self"],
          ["const quark_basis *", "p_v"]
        ]
      },
      {
        "name": "quark_transform_get_origin",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_transform *", "p_self"]
        ]
      },
      {
        "name": "quark_transform_set_origin",
        "return_type": "void",
        "arguments": [
          ["quark_transform *", "p_self"],
          ["const quark_vector3 *", "p_v"]
        ]
      },
      {
        "name": "quark_transform_as_string",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_transform *", "p_self"]
        ]
      },
      {
        "name": "quark_transform_inverse",
        "return_type": "quark_transform",
        "arguments": [
          ["const quark_transform *", "p_self"]
        ]
      },
      {
        "name": "quark_transform_affine_inverse",
        "return_type": "quark_transform",
        "arguments": [
          ["const quark_transform *", "p_self"]
        ]
      },
      {
        "name": "quark_transform_orthonormalized",
        "return_type": "quark_transform",
        "arguments": [
          ["const quark_transform *", "p_self"]
        ]
      },
      {
        "name": "quark_transform_rotated",
        "return_type": "quark_transform",
        "arguments": [
          ["const quark_transform *", "p_self"],
          ["const quark_vector3 *", "p_axis"],
          ["const quark_real", "p_phi"]
        ]
      },
      {
        "name": "quark_transform_scaled",
        "return_type": "quark_transform",
        "arguments": [
          ["const quark_transform *", "p_self"],
          ["const quark_vector3 *", "p_scale"]
        ]
      },
      {
        "name": "quark_transform_translated",
        "return_type": "quark_transform",
        "arguments": [
          ["const quark_transform *", "p_self"],
          ["const quark_vector3 *", "p_ofs"]
        ]
      },
      {
        "name": "quark_transform_looking_at",
        "return_type": "quark_transform",
        "arguments": [
          ["const quark_transform *", "p_self"],
          ["const quark_vector3 *", "p_target"],
          ["const quark_vector3 *", "p_up"]
        ]
      },
      {
        "name": "quark_transform_xform_plane",
        "return_type": "quark_plane",
        "arguments": [
          ["const quark_transform *", "p_self"],
          ["const quark_plane *", "p_v"]
        ]
      },
      {
        "name": "quark_transform_xform_inv_plane",
        "return_type": "quark_plane",
        "arguments": [
          ["const quark_transform *", "p_self"],
          ["const quark_plane *", "p_v"]
        ]
      },
      {
        "name": "quark_transform_new_identity",
        "return_type": "void",
        "arguments": [
          ["quark_transform *", "r_dest"]
        ]
      },
      {
        "name": "quark_transform_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_transform *", "p_self"],
          ["const quark_transform *", "p_b"]
        ]
      },
      {
        "name": "quark_transform_operator_multiply",
        "return_type": "quark_transform",
        "arguments": [
          ["const quark_transform *", "p_self"],
          ["const quark_transform *", "p_b"]
        ]
      },
      {
        "name": "quark_transform_xform_vector3",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_transform *", "p_self"],
          ["const quark_vector3 *", "p_v"]
        ]
      },
      {
        "name": "quark_transform_xform_inv_vector3",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_transform *", "p_self"],
          ["const quark_vector3 *", "p_v"]
        ]
      },
      {
        "name": "quark_transform_xform_aabb",
        "return_type": "quark_aabb",
        "arguments": [
          ["const quark_transform *", "p_self"],
          ["const quark_aabb *", "p_v"]
        ]
      },
      {
        "name": "quark_transform_xform_inv_aabb",
        "return_type": "quark_aabb",
        "arguments": [
          ["const quark_transform *", "p_self"],
          ["const quark_aabb *", "p_v"]
        ]
      },
      {
        "name": "quark_transform2d_new",
        "return_type": "void",
        "arguments": [
          ["quark_transform2d *", "r_dest"],
          ["const quark_real", "p_rot"],
          ["const quark_vector2 *", "p_pos"]
        ]
      },
      {
        "name": "quark_transform2d_new_axis_origin",
        "return_type": "void",
        "arguments": [
          ["quark_transform2d *", "r_dest"],
          ["const quark_vector2 *", "p_x_axis"],
          ["const quark_vector2 *", "p_y_axis"],
          ["const quark_vector2 *", "p_origin"]
        ]
      },
      {
        "name": "quark_transform2d_as_string",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_transform2d *", "p_self"]
        ]
      },
      {
        "name": "quark_transform2d_inverse",
        "return_type": "quark_transform2d",
        "arguments": [
          ["const quark_transform2d *", "p_self"]
        ]
      },
      {
        "name": "quark_transform2d_affine_inverse",
        "return_type": "quark_transform2d",
        "arguments": [
          ["const quark_transform2d *", "p_self"]
        ]
      },
      {
        "name": "quark_transform2d_get_rotation",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_transform2d *", "p_self"]
        ]
      },
      {
        "name": "quark_transform2d_get_origin",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_transform2d *", "p_self"]
        ]
      },
      {
        "name": "quark_transform2d_get_scale",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_transform2d *", "p_self"]
        ]
      },
      {
        "name": "quark_transform2d_orthonormalized",
        "return_type": "quark_transform2d",
        "arguments": [
          ["const quark_transform2d *", "p_self"]
        ]
      },
      {
        "name": "quark_transform2d_rotated",
        "return_type": "quark_transform2d",
        "arguments": [
          ["const quark_transform2d *", "p_self"],
          ["const quark_real", "p_phi"]
        ]
      },
      {
        "name": "quark_transform2d_scaled",
        "return_type": "quark_transform2d",
        "arguments": [
          ["const quark_transform2d *", "p_self"],
          ["const quark_vector2 *", "p_scale"]
        ]
      },
      {
        "name": "quark_transform2d_translated",
        "return_type": "quark_transform2d",
        "arguments": [
          ["const quark_transform2d *", "p_self"],
          ["const quark_vector2 *", "p_offset"]
        ]
      },
      {
        "name": "quark_transform2d_xform_vector2",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_transform2d *", "p_self"],
          ["const quark_vector2 *", "p_v"]
        ]
      },
      {
        "name": "quark_transform2d_xform_inv_vector2",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_transform2d *", "p_self"],
          ["const quark_vector2 *", "p_v"]
        ]
      },
      {
        "name": "quark_transform2d_basis_xform_vector2",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_transform2d *", "p_self"],
          ["const quark_vector2 *", "p_v"]
        ]
      },
      {
        "name": "quark_transform2d_basis_xform_inv_vector2",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_transform2d *", "p_self"],
          ["const quark_vector2 *", "p_v"]
        ]
      },
      {
        "name": "quark_transform2d_interpolate_with",
        "return_type": "quark_transform2d",
        "arguments": [
          ["const quark_transform2d *", "p_self"],
          ["const quark_transform2d *", "p_m"],
          ["const quark_real", "p_c"]
        ]
      },
      {
        "name": "quark_transform2d_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_transform2d *", "p_self"],
          ["const quark_transform2d *", "p_b"]
        ]
      },
      {
        "name": "quark_transform2d_operator_multiply",
        "return_type": "quark_transform2d",
        "arguments": [
          ["const quark_transform2d *", "p_self"],
          ["const quark_transform2d *", "p_b"]
        ]
      },
      {
        "name": "quark_transform2d_new_identity",
        "return_type": "void",
        "arguments": [
          ["quark_transform2d *", "r_dest"]
        ]
      },
      {
        "name": "quark_transform2d_xform_rect2",
        "return_type": "quark_rect2",
        "arguments": [
          ["const quark_transform2d *", "p_self"],
          ["const quark_rect2 *", "p_v"]
        ]
      },
      {
        "name": "quark_transform2d_xform_inv_rect2",
        "return_type": "quark_rect2",
        "arguments": [
          ["const quark_transform2d *", "p_self"],
          ["const quark_rect2 *", "p_v"]
        ]
      },
      {
        "name": "quark_variant_get_type",
        "return_type": "quark_variant_type",
        "arguments": [
          ["const quark_variant *", "p_v"]
        ]
      },
      {
        "name": "quark_variant_new_copy",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_variant *", "p_src"]
        ]
      },
      {
        "name": "quark_variant_new_nil",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"]
        ]
      },
      {
        "name": "quark_variant_new_bool",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_bool", "p_b"]
        ]
      },
      {
        "name": "quark_variant_new_uint",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const uint64_t", "p_i"]
        ]
      },
      {
        "name": "quark_variant_new_int",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const int64_t", "p_i"]
        ]
      },
      {
        "name": "quark_variant_new_real",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const double", "p_r"]
        ]
      },
      {
        "name": "quark_variant_new_string",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_string *", "p_s"]
        ]
      },
      {
        "name": "quark_variant_new_vector2",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_vector2 *", "p_v2"]
        ]
      },
      {
        "name": "quark_variant_new_rect2",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_rect2 *", "p_rect2"]
        ]
      },
      {
        "name": "quark_variant_new_vector3",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_vector3 *", "p_v3"]
        ]
      },
      {
        "name": "quark_variant_new_transform2d",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_transform2d *", "p_t2d"]
        ]
      },
      {
        "name": "quark_variant_new_plane",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_plane *", "p_plane"]
        ]
      },
      {
        "name": "quark_variant_new_quat",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_quat *", "p_quat"]
        ]
      },
      {
        "name": "quark_variant_new_aabb",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_aabb *", "p_aabb"]
        ]
      },
      {
        "name": "quark_variant_new_basis",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_basis *", "p_basis"]
        ]
      },
      {
        "name": "quark_variant_new_transform",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_transform *", "p_trans"]
        ]
      },
      {
        "name": "quark_variant_new_color",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_color *", "p_color"]
        ]
      },
      {
        "name": "quark_variant_new_node_path",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_node_path *", "p_np"]
        ]
      },
      {
        "name": "quark_variant_new_rid",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_rid *", "p_rid"]
        ]
      },
      {
        "name": "quark_variant_new_object",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_object *", "p_obj"]
        ]
      },
      {
        "name": "quark_variant_new_dictionary",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_dictionary *", "p_dict"]
        ]
      },
      {
        "name": "quark_variant_new_array",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_array *", "p_arr"]
        ]
      },
      {
        "name": "quark_variant_new_pool_byte_array",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_pool_byte_array *", "p_pba"]
        ]
      },
      {
        "name": "quark_variant_new_pool_int_array",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_pool_int_array *", "p_pia"]
        ]
      },
      {
        "name": "quark_variant_new_pool_real_array",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_pool_real_array *", "p_pra"]
        ]
      },
      {
        "name": "quark_variant_new_pool_string_array",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_pool_string_array *", "p_psa"]
        ]
      },
      {
        "name": "quark_variant_new_pool_vector2_array",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_pool_vector2_array *", "p_pv2a"]
        ]
      },
      {
        "name": "quark_variant_new_pool_vector3_array",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_pool_vector3_array *", "p_pv3a"]
        ]
      },
      {
        "name": "quark_variant_new_pool_color_array",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "r_dest"],
          ["const quark_pool_color_array *", "p_pca"]
        ]
      },
      {
        "name": "quark_variant_as_bool",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_uint",
        "return_type": "uint64_t",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_int",
        "return_type": "int64_t",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_real",
        "return_type": "double",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_string",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_vector2",
        "return_type": "quark_vector2",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_rect2",
        "return_type": "quark_rect2",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_vector3",
        "return_type": "quark_vector3",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_transform2d",
        "return_type": "quark_transform2d",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_plane",
        "return_type": "quark_plane",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_quat",
        "return_type": "quark_quat",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_aabb",
        "return_type": "quark_aabb",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_basis",
        "return_type": "quark_basis",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_transform",
        "return_type": "quark_transform",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_color",
        "return_type": "quark_color",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_node_path",
        "return_type": "quark_node_path",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_rid",
        "return_type": "quark_rid",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_object",
        "return_type": "quark_object *",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_dictionary",
        "return_type": "quark_dictionary",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_array",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_pool_byte_array",
        "return_type": "quark_pool_byte_array",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_pool_int_array",
        "return_type": "quark_pool_int_array",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_pool_real_array",
        "return_type": "quark_pool_real_array",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_pool_string_array",
        "return_type": "quark_pool_string_array",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_pool_vector2_array",
        "return_type": "quark_pool_vector2_array",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_pool_vector3_array",
        "return_type": "quark_pool_vector3_array",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_as_pool_color_array",
        "return_type": "quark_pool_color_array",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_call",
        "return_type": "quark_variant",
        "arguments": [
          ["quark_variant *", "p_self"],
          ["const quark_string *", "p_method"],
          ["const quark_variant **", "p_args"],
          ["const quark_int", "p_argcount"],
          ["quark_variant_call_error *", "r_error"]
        ]
      },
      {
        "name": "quark_variant_has_method",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_variant *", "p_self"],
          ["const quark_string *", "p_method"]
        ]
      },
      {
        "name": "quark_variant_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_variant *", "p_self"],
          ["const quark_variant *", "p_other"]
        ]
      },
      {
        "name": "quark_variant_operator_less",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_variant *", "p_self"],
          ["const quark_variant *", "p_other"]
        ]
      },
      {
        "name": "quark_variant_hash_compare",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_variant *", "p_self"],
          ["const quark_variant *", "p_other"]
        ]
      },
      {
        "name": "quark_variant_booleanize",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_variant_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_variant *", "p_self"]
        ]
      },
      {
        "name": "quark_char_string_length",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_char_string *", "p_cs"]
        ]
      },
      {
        "name": "quark_char_string_get_data",
        "return_type": "const char *",
        "arguments": [
          ["const quark_char_string *", "p_cs"]
        ]
      },
      {
        "name": "quark_char_string_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_char_string *", "p_cs"]
        ]
      },
      {
        "name": "quark_string_new",
        "return_type": "void",
        "arguments": [
          ["quark_string *", "r_dest"]
        ]
      },
      {
        "name": "quark_string_new_copy",
        "return_type": "void",
        "arguments": [
          ["quark_string *", "r_dest"],
          ["const quark_string *", "p_src"]
        ]
      },
      {
        "name": "quark_string_new_with_wide_string",
        "return_type": "void",
        "arguments": [
          ["quark_string *", "r_dest"],
          ["const wchar_t *", "p_contents"],
          ["const int", "p_size"]
        ]
      },
      {
        "name": "quark_string_operator_index",
        "return_type": "wchar_t *",
        "arguments": [
          ["quark_string *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_string_operator_index_const",
        "return_type": "wchar_t",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_int", "p_idx"]
        ]
      },
      {
	"name": "quark_string_wide_str",
        "return_type": "const wchar_t *",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_b"]
        ]
      },
      {
        "name": "quark_string_operator_less",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_b"]
        ]
      },
      {
        "name": "quark_string_operator_plus",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_b"]
        ]
      },
      {
        "name": "quark_string_length",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_casecmp_to",
        "return_type": "signed char",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_str"]
        ]
      },
      {
        "name": "quark_string_nocasecmp_to",
        "return_type": "signed char",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_str"]
        ]
      },
      {
        "name": "quark_string_naturalnocasecmp_to",
        "return_type": "signed char",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_str"]
        ]
      },
      {
        "name": "quark_string_begins_with",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_string"]
        ]
      },
      {
        "name": "quark_string_begins_with_char_array",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const char *", "p_char_array"]
        ]
      },
      {
        "name": "quark_string_bigrams",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_chr",
        "return_type": "quark_string",
        "arguments": [
          ["wchar_t", "p_character"]
        ]
      },
      {
        "name": "quark_string_ends_with",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_string"]
        ]
      },
      {
        "name": "quark_string_find",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_what"]
        ]
      },
      {
        "name": "quark_string_find_from",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_what"],
          ["quark_int", "p_from"]
        ]
      },
      {
        "name": "quark_string_findmk",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_array *", "p_keys"]
        ]
      },
      {
        "name": "quark_string_findmk_from",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_array *", "p_keys"],
          ["quark_int", "p_from"]
        ]
      },
      {
        "name": "quark_string_findmk_from_in_place",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_array *", "p_keys"],
          ["quark_int", "p_from"],
          ["quark_int *", "r_key"]
        ]
      },
      {
        "name": "quark_string_findn",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_what"]
        ]
      },
      {
        "name": "quark_string_findn_from",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_what"],
          ["quark_int", "p_from"]
        ]
      },
      {
        "name": "quark_string_find_last",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_what"]
        ]
      },
      {
        "name": "quark_string_format",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_variant *", "p_values"]
        ]
      },
      {
        "name": "quark_string_format_with_custom_placeholder",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_variant *", "p_values"],
          ["const char *", "p_placeholder"]
        ]
      },
      {
        "name": "quark_string_hex_encode_buffer",
        "return_type": "quark_string",
        "arguments": [
          ["const uint8_t *", "p_buffer"],
          ["quark_int", "p_len"]
        ]
      },
      {
        "name": "quark_string_hex_to_int",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_hex_to_int_without_prefix",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_insert",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_int", "p_at_pos"],
          ["quark_string", "p_string"]
        ]
      },
      {
        "name": "quark_string_is_numeric",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_is_subsequence_of",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_string"]
        ]
      },
      {
        "name": "quark_string_is_subsequence_ofi",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_string"]
        ]
      },
      {
        "name": "quark_string_lpad",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_int", "p_min_length"]
        ]
      },
      {
        "name": "quark_string_lpad_with_custom_character",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_int", "p_min_length"],
          ["const quark_string *", "p_character"]
        ]
      },
      {
        "name": "quark_string_match",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_wildcard"]
        ]
      },
      {
        "name": "quark_string_matchn",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_wildcard"]
        ]
      },
      {
        "name": "quark_string_md5",
        "return_type": "quark_string",
        "arguments": [
          ["const uint8_t *", "p_md5"]
        ]
      },
      {
        "name": "quark_string_num",
        "return_type": "quark_string",
        "arguments": [
          ["double", "p_num"]
        ]
      },
      {
        "name": "quark_string_num_int64",
        "return_type": "quark_string",
        "arguments": [
          ["int64_t", "p_num"],
          ["quark_int", "p_base"]
        ]
      },
      {
        "name": "quark_string_num_int64_capitalized",
        "return_type": "quark_string",
        "arguments": [
          ["int64_t", "p_num"],
          ["quark_int", "p_base"],
          ["quark_bool", "p_capitalize_hex"]
        ]
      },
      {
        "name": "quark_string_num_real",
        "return_type": "quark_string",
        "arguments": [
          ["double", "p_num"]
        ]
      },
      {
        "name": "quark_string_num_scientific",
        "return_type": "quark_string",
        "arguments": [
          ["double", "p_num"]
        ]
      },
      {
        "name": "quark_string_num_with_decimals",
        "return_type": "quark_string",
        "arguments": [
          ["double", "p_num"],
          ["quark_int", "p_decimals"]
        ]
      },
      {
        "name": "quark_string_pad_decimals",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_int", "p_digits"]
        ]
      },
      {
        "name": "quark_string_pad_zeros",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_int", "p_digits"]
        ]
      },
      {
        "name": "quark_string_replace_first",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_key"],
          ["quark_string", "p_with"]
        ]
      },
      {
        "name": "quark_string_replace",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_key"],
          ["quark_string", "p_with"]
        ]
      },
      {
        "name": "quark_string_replacen",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_key"],
          ["quark_string", "p_with"]
        ]
      },
      {
        "name": "quark_string_rfind",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_what"]
        ]
      },
      {
        "name": "quark_string_rfindn",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_what"]
        ]
      },
      {
        "name": "quark_string_rfind_from",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_what"],
          ["quark_int", "p_from"]
        ]
      },
      {
        "name": "quark_string_rfindn_from",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_what"],
          ["quark_int", "p_from"]
        ]
      },
      {
        "name": "quark_string_rpad",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_int", "p_min_length"]
        ]
      },
      {
        "name": "quark_string_rpad_with_custom_character",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_int", "p_min_length"],
          ["const quark_string *", "p_character"]
        ]
      },
      {
        "name": "quark_string_similarity",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_string"]
        ]
      },
      {
        "name": "quark_string_sprintf",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_array *", "p_values"],
          ["quark_bool *", "p_error"]
        ]
      },
      {
        "name": "quark_string_substr",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_int", "p_from"],
          ["quark_int", "p_chars"]
        ]
      },
      {
        "name": "quark_string_to_double",
        "return_type": "double",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_to_float",
        "return_type": "quark_real",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_to_int",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_camelcase_to_underscore",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_camelcase_to_underscore_lowercased",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_capitalize",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_char_to_double",
        "return_type": "double",
        "arguments": [
          ["const char *", "p_what"]
        ]
      },
      {
        "name": "quark_string_char_to_int",
        "return_type": "quark_int",
        "arguments": [
          ["const char *", "p_what"]
        ]
      },
      {
        "name": "quark_string_wchar_to_int",
        "return_type": "int64_t",
        "arguments": [
          ["const wchar_t *", "p_str"]
        ]
      },
      {
        "name": "quark_string_char_to_int_with_len",
        "return_type": "quark_int",
        "arguments": [
          ["const char *", "p_what"],
          ["quark_int", "p_len"]
        ]
      },
      {
        "name": "quark_string_char_to_int64_with_len",
        "return_type": "int64_t",
        "arguments": [
          ["const wchar_t *", "p_str"],
          ["int", "p_len"]
        ]
      },
      {
        "name": "quark_string_hex_to_int64",
        "return_type": "int64_t",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_hex_to_int64_with_prefix",
        "return_type": "int64_t",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_to_int64",
        "return_type": "int64_t",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_unicode_char_to_double",
        "return_type": "double",
        "arguments": [
          ["const wchar_t *", "p_str"],
          ["const wchar_t **", "r_end"]
        ]
      },
      {
        "name": "quark_string_get_slice_count",
        "return_type": "quark_int",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_splitter"]
        ]
      },
      {
        "name": "quark_string_get_slice",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_string", "p_splitter"],
          ["quark_int", "p_slice"]
        ]
      },
      {
        "name": "quark_string_get_slicec",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["wchar_t", "p_splitter"],
          ["quark_int", "p_slice"]
        ]
      },
      {
        "name": "quark_string_split",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_splitter"]
        ]
      },
      {
        "name": "quark_string_split_allow_empty",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_splitter"]
        ]
      },
      {
        "name": "quark_string_split_floats",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_splitter"]
        ]
      },
      {
        "name": "quark_string_split_floats_allows_empty",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_splitter"]
        ]
      },
      {
        "name": "quark_string_split_floats_mk",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_array *", "p_splitters"]
        ]
      },
      {
        "name": "quark_string_split_floats_mk_allows_empty",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_array *", "p_splitters"]
        ]
      },
      {
        "name": "quark_string_split_ints",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_splitter"]
        ]
      },
      {
        "name": "quark_string_split_ints_allows_empty",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_splitter"]
        ]
      },
      {
        "name": "quark_string_split_ints_mk",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_array *", "p_splitters"]
        ]
      },
      {
        "name": "quark_string_split_ints_mk_allows_empty",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_array *", "p_splitters"]
        ]
      },
      {
        "name": "quark_string_split_spaces",
        "return_type": "quark_array",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_char_lowercase",
        "return_type": "wchar_t",
        "arguments": [
          ["wchar_t", "p_char"]
        ]
      },
      {
        "name": "quark_string_char_uppercase",
        "return_type": "wchar_t",
        "arguments": [
          ["wchar_t", "p_char"]
        ]
      },
      {
        "name": "quark_string_to_lower",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_to_upper",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_get_basename",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_get_extension",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_left",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_int", "p_pos"]
        ]
      },
      {
        "name": "quark_string_ord_at",
        "return_type": "wchar_t",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_int", "p_idx"]
        ]
      },
      {
        "name": "quark_string_plus_file",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_file"]
        ]
      },
      {
        "name": "quark_string_right",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_int", "p_pos"]
        ]
      },
      {
        "name": "quark_string_strip_edges",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_bool", "p_left"],
          ["quark_bool", "p_right"]
        ]
      },
      {
        "name": "quark_string_strip_escapes",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_erase",
        "return_type": "void",
        "arguments": [
          ["quark_string *", "p_self"],
          ["quark_int", "p_pos"],
          ["quark_int", "p_chars"]
        ]
      },
      {
        "name": "quark_string_ascii",
        "return_type": "quark_char_string",
        "arguments": [
	  ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_ascii_extended",
        "return_type": "quark_char_string",
        "arguments": [
	  ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_utf8",
        "return_type": "quark_char_string",
        "arguments": [
	  ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_parse_utf8",
        "return_type": "quark_bool",
        "arguments": [
          ["quark_string *", "p_self"],
          ["const char *", "p_utf8"]
        ]
      },
      {
        "name": "quark_string_parse_utf8_with_len",
        "return_type": "quark_bool",
        "arguments": [
          ["quark_string *", "p_self"],
          ["const char *", "p_utf8"],
          ["quark_int", "p_len"]
        ]
      },
      {
        "name": "quark_string_chars_to_utf8",
        "return_type": "quark_string",
        "arguments": [
          ["const char *", "p_utf8"]
        ]
      },
      {
        "name": "quark_string_chars_to_utf8_with_len",
        "return_type": "quark_string",
        "arguments": [
          ["const char *", "p_utf8"],
          ["quark_int", "p_len"]
        ]
      },
      {
        "name": "quark_string_hash",
        "return_type": "uint32_t",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_hash64",
        "return_type": "uint64_t",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_hash_chars",
        "return_type": "uint32_t",
        "arguments": [
          ["const char *", "p_cstr"]
        ]
      },
      {
        "name": "quark_string_hash_chars_with_len",
        "return_type": "uint32_t",
        "arguments": [
          ["const char *", "p_cstr"],
          ["quark_int", "p_len"]
        ]
      },
      {
        "name": "quark_string_hash_utf8_chars",
        "return_type": "uint32_t",
        "arguments": [
          ["const wchar_t *", "p_str"]
        ]
      },
      {
        "name": "quark_string_hash_utf8_chars_with_len",
        "return_type": "uint32_t",
        "arguments": [
          ["const wchar_t *", "p_str"],
          ["quark_int", "p_len"]
        ]
      },
      {
        "name": "quark_string_md5_buffer",
        "return_type": "quark_pool_byte_array",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_md5_text",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_sha256_buffer",
        "return_type": "quark_pool_byte_array",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_sha256_text",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_empty",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_get_base_dir",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_get_file",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_humanize_size",
        "return_type": "quark_string",
        "arguments": [
          ["size_t", "p_size"]
        ]
      },
      {
        "name": "quark_string_is_abs_path",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_is_rel_path",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_is_resource_file",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_path_to",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_path"]
        ]
      },
      {
        "name": "quark_string_path_to_file",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["const quark_string *", "p_path"]
        ]
      },
      {
        "name": "quark_string_simplify_path",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_c_escape",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_c_escape_multiline",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_c_unescape",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_http_escape",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_http_unescape",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_json_escape",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_word_wrap",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_int", "p_chars_per_line"]
        ]
      },
      {
        "name": "quark_string_xml_escape",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_xml_escape_with_quotes",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_xml_unescape",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_percent_decode",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_percent_encode",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_is_valid_float",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_is_valid_hex_number",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"],
          ["quark_bool", "p_with_prefix"]
        ]
      },
      {
        "name": "quark_string_is_valid_html_color",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_is_valid_identifier",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_is_valid_integer",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_is_valid_ip_address",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_string *", "p_self"]
        ]
      },
      {
        "name": "quark_string_name_new",
        "return_type": "void",
        "arguments": [
          ["quark_string_name *", "r_dest"],
          ["const quark_string *", "p_name"]
        ]
      },
      {
        "name": "quark_string_name_new_data",
        "return_type": "void",
        "arguments": [
          ["quark_string_name *", "r_dest"],
          ["const char *", "p_name"]
        ]
      },
      {
        "name": "quark_string_name_get_name",
        "return_type": "quark_string",
        "arguments": [
          ["const quark_string_name *", "p_self"]
        ]
      },
      {
        "name": "quark_string_name_get_hash",
        "return_type": "uint32_t",
        "arguments": [
          ["const quark_string_name *", "p_self"]
        ]
      },
      {
        "name": "quark_string_name_get_data_unique_pointer",
        "return_type": "const void *",
        "arguments": [
          ["const quark_string_name *", "p_self"]
        ]
      },
      {
        "name": "quark_string_name_operator_equal",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string_name *", "p_self"],
          ["const quark_string_name *", "p_other"]
        ]
      },
      {
        "name": "quark_string_name_operator_less",
        "return_type": "quark_bool",
        "arguments": [
          ["const quark_string_name *", "p_self"],
          ["const quark_string_name *", "p_other"]
        ]
      },
      {
        "name": "quark_string_name_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_string_name *", "p_self"]
        ]
      },
      {
        "name": "quark_object_destroy",
        "return_type": "void",
        "arguments": [
          ["quark_object *", "p_o"]
        ]
      },
      {
        "name": "quark_global_get_singleton",
        "return_type": "quark_object *",
        "arguments": [
          ["char *", "p_name"]
        ]
      },
      {
        "name": "quark_method_bind_get_method",
        "return_type": "quark_method_bind *",
        "arguments": [
          ["const char *", "p_classname"],
          ["const char *", "p_methodname"]
        ]
      },
      {
        "name": "quark_method_bind_ptrcall",
        "return_type": "void",
        "arguments": [
          ["quark_method_bind *", "p_method_bind"],
          ["quark_object *", "p_instance"],
          ["const void **", "p_args"],
          ["void *", "p_ret"]
        ]
      },
      {
        "name": "quark_method_bind_call",
        "return_type": "quark_variant",
        "arguments": [
          ["quark_method_bind *", "p_method_bind"],
          ["quark_object *", "p_instance"],
          ["const quark_variant **", "p_args"],
          ["const int", "p_arg_count"],
          ["quark_variant_call_error *", "p_call_error"]
        ]
      },
      {
        "name": "quark_get_class_constructor",
        "return_type": "quark_class_constructor",
        "arguments": [
          ["const char *", "p_classname"]
        ]
      },
      {
        "name": "quark_get_global_constants",
        "return_type": "quark_dictionary",
        "arguments": [
        ]
      },
      {
        "name": "quark_register_native_call_type",
        "return_type": "void",
        "arguments": [
          ["const char *", "call_type"],
          ["native_call_cb", "p_callback"]
        ]
      },
      {
        "name": "quark_alloc",
        "return_type": "void *",
        "arguments": [
          ["int", "p_bytes"]
        ]
      },
      {
        "name": "quark_realloc",
        "return_type": "void *",
        "arguments": [
          ["void *", "p_ptr"],
          ["int", "p_bytes"]
        ]
      },
      {
        "name": "quark_free",
        "return_type": "void",
        "arguments": [
          ["void *", "p_ptr"]
        ]
      },
      {
        "name": "quark_print_error",
        "return_type": "void",
        "arguments": [
          ["const char *", "p_description"],
          ["const char *", "p_function"],
          ["const char *", "p_file"],
          ["int", "p_line"]
        ]
      },
      {
        "name": "quark_print_warning",
        "return_type": "void",
        "arguments": [
          ["const char *", "p_description"],
          ["const char *", "p_function"],
          ["const char *", "p_file"],
          ["int", "p_line"]
        ]
      },
      {
        "name": "quark_print",
        "return_type": "void",
        "arguments": [
          ["const quark_string *", "p_message"]
        ]
      }
    ]
  },
  "extensions": {
    "nativescript": {
      "type": "NATIVESCRIPT",
      "version": {
        "major": 1,
        "minor": 0
      },
      "next": {
	"type": "NATIVESCRIPT",
	"version": {
	  "major": 1,
	  "minor": 1
	},
	"next": null,
	"api": [
          {
	    "name": "quark_set_method_argument_information",
            "return_type": "void",
            "arguments": [
              ["void *", "p_qnative_handle"],
              ["const char *", "p_name"],
              ["const char *", "p_function_name"],
              ["int", "p_num_args"],
              ["const quark_method_arg *", "p_args"]
            ]
          },
          {
	    "name": "quark_set_class_documentation",
            "return_type": "void",
            "arguments": [
              ["void *", "p_qnative_handle"],
              ["const char *", "p_name"],
              ["quark_string", "p_documentation"]
            ]
          },
          {
	    "name": "quark_set_method_documentation",
            "return_type": "void",
            "arguments": [
              ["void *", "p_qnative_handle"],
              ["const char *", "p_name"],
              ["const char *", "p_function_name"],
              ["quark_string", "p_documentation"]
            ]
          },
          {
	    "name": "quark_set_property_documentation",
            "return_type": "void",
            "arguments": [
              ["void *", "p_qnative_handle"],
              ["const char *", "p_name"],
              ["const char *", "p_path"],
              ["quark_string", "p_documentation"]
            ]
          },
          {
	    "name": "quark_set_signal_documentation",
            "return_type": "void",
            "arguments": [
              ["void *", "p_qnative_handle"],
              ["const char *", "p_name"],
              ["const char *", "p_signal_name"],
              ["quark_string", "p_documentation"]
            ]
          },
          {
            "name": "quark_set_type_tag",
            "return_type": "void",
            "arguments": [
              ["void *", "p_qnative_handle"],
              ["const char *", "p_name"],
              ["const void *", "p_type_tag"]
            ]
          },
          {
            "name": "quark_get_type_tag",
            "return_type": "const void *",
            "arguments": [
              ["const quark_object *", "p_object"]
            ]
          },
          {
            "name": "quark_register_instance_binding_data_functions",
            "return_type": "int",
            "arguments": [
              ["quark_instance_binding_functions", "p_binding_functions"]
            ]
          },
          {
            "name": "quark_unregister_instance_binding_data_functions",
            "return_type": "void",
            "arguments": [
              ["int", "p_idx"]
            ]
          },
          {
            "name": "quark_get_instance_binding_data",
            "return_type": "void *",
            "arguments": [
              ["int", "p_idx"],
	      ["quark_object *", "p_object"]
            ]
          }
	]
      },
      "api": [
        {
          "name": "quark_register_class",
          "return_type": "void",
          "arguments": [
            ["void *", "p_qnative_handle"],
            ["const char *", "p_name"],
            ["const char *", "p_base"],
            ["quark_instance_create_func", "p_create_func"],
            ["quark_instance_destroy_func", "p_destroy_func"]
          ]
        },
        {
          "name": "quark_register_tool_class",
          "return_type": "void",
          "arguments": [
            ["void *", "p_qnative_handle"],
            ["const char *", "p_name"],
            ["const char *", "p_base"],
            ["quark_instance_create_func", "p_create_func"],
            ["quark_instance_destroy_func", "p_destroy_func"]
          ]
        },
        {
          "name": "quark_register_method",
          "return_type": "void",
          "arguments": [
            ["void *", "p_qnative_handle"],
            ["const char *", "p_name"],
            ["const char *", "p_function_name"],
            ["quark_method_attributes", "p_attr"],
            ["quark_instance_method", "p_method"]
          ]
        },
        {
          "name": "quark_register_property",
          "return_type": "void",
          "arguments": [
            ["void *", "p_qnative_handle"],
            ["const char *", "p_name"],
            ["const char *", "p_path"],
            ["quark_property_attributes *", "p_attr"],
            ["quark_property_set_func", "p_set_func"],
            ["quark_property_get_func", "p_get_func"]
          ]
        },
        {
          "name": "quark_register_signal",
          "return_type": "void",
          "arguments": [
            ["void *", "p_qnative_handle"],
            ["const char *", "p_name"],
            ["const quark_signal *", "p_signal"]
          ]
        },
        {
          "name": "quark_get_userdata",
          "return_type": "void *",
          "arguments": [
            ["quark_object *", "p_instance"]
          ]
        }
      ]
    },
    "pluginscript": {
      "type": "PLUGINSCRIPT",
      "version": {
        "major": 1,
        "minor": 0
      },
      "next": null,
      "api": [
        {
          "name": "quark_pluginscript_register_language",
          "return_type": "void",
          "arguments": [
            ["const quark_pluginscript_language_desc *", "language_desc"]
          ]
        }
      ]
    }
  }
}
